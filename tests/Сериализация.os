// BSLLS:DuplicateStringLiteral-off
// BSLLS:MagicNumber-off
#Использовать ".."
#Использовать "."
#Использовать asserts

&Тест
Процедура СериализацияКласса() Экспорт

	// Дано
	ТестовыйКласс = Новый ТестовыйКласс();
	ТестовыйКласс.Число = 1;
	ТестовыйКласс.Строка = "Строка";
	ТестовыйКласс.Булево = Истина;
	ТестовыйКласс.Дата = Дата(2023, 1, 1);
	ТестовыйКласс.ПолеНеопределено = Неопределено;
	ТестовыйКласс.НеобязательноеНеопределено = Неопределено;
	ТестовыйКласс.ОбязательноеНеопределено = Неопределено;
	ТестовыйКласс.ПолеNull = Null;
	
	ТестовыйКласс.Массив = Новый Массив();
	ТестовыйКласс.Массив.Добавить(1);
	ТестовыйКласс.Массив.Добавить(2);

	ТестовыйКласс.Структура = Новый Структура();
	ТестовыйКласс.Структура.Вставить("поле1", 1);
	ТестовыйКласс.Структура.Вставить("поле2", 2);

	ТестовыйКласс.МассивСтруктур = Новый Массив();
	ТестовыйКласс.МассивСтруктур.Добавить(ТестовыйКласс.Структура);
	ТестовыйКласс.МассивСтруктур.Добавить(ТестовыйКласс.Структура); // BSLLS:DuplicatedInsertionIntoCollection-off

	ТестовыйКласс.Соответствие = Новый Структура();
	ТестовыйКласс.Соответствие.Вставить("поле1", 1);
	ТестовыйКласс.Соответствие.Вставить("поле2", 2);

	ВторойТестовыйКласс = Новый ТестовыйКласс();
	ВторойТестовыйКласс.Число = 2;

	ТестовыйКласс.Ссылка = ВторойТестовыйКласс;

	СериализаторJson = Новый СериализаторJson();
	
	// Когда
	Результат = СериализаторJson.Сериализовать(ТестовыйКласс);

	// Тогда
	Ожидаем.Что(Результат).Не_().Равно("");

	ПрочитанныйОбъект = ПрочитатьИзJSON(Результат);

	Ожидаем.Что(ПрочитанныйОбъект).ИмеетТип("Структура");
	Ожидаем.Что(ПрочитанныйОбъект.number).Равно(ТестовыйКласс.Число);
	Ожидаем.Что(ПрочитанныйОбъект.Строка).Равно(ТестовыйКласс.Строка);
	Ожидаем.Что(ПрочитанныйОбъект.Булево).Равно(ТестовыйКласс.Булево);
	Ожидаем.Что(ПрочитанныйОбъект.Дата).Равно(ТестовыйКласс.Дата);
	Ожидаем.Что(ПрочитанныйОбъект.Свойство("ПолеНеопределено")).Равно(Ложь);
	Ожидаем.Что(ПрочитанныйОбъект.Свойство("НеобязательноеНеопределено")).Равно(Ложь);
	Ожидаем.Что(ПрочитанныйОбъект.ОбязательноеНеопределено).Равно(Неопределено);
	Ожидаем.Что(ПрочитанныйОбъект.ПолеNull).Равно(Неопределено);
	
	Ожидаем.Что(ПрочитанныйОбъект.Массив).ИмеетТип("Массив");
	Ожидаем.Что(ПрочитанныйОбъект.Массив).ИмеетДлину(2);
	Ожидаем.Что(ПрочитанныйОбъект.Массив[0]).Равно(1);
	Ожидаем.Что(ПрочитанныйОбъект.Массив[1]).Равно(2);

	Ожидаем.Что(ПрочитанныйОбъект.Структура).ИмеетТип("Структура");
	Ожидаем.Что(ПрочитанныйОбъект.Структура.поле1).Равно(1);
	Ожидаем.Что(ПрочитанныйОбъект.Структура.поле2).Равно(2);
	
	Ожидаем.Что(ПрочитанныйОбъект.МассивСтруктур).ИмеетТип("Массив");
	Ожидаем.Что(ПрочитанныйОбъект.МассивСтруктур).ИмеетДлину(2);
	Ожидаем.Что(ПрочитанныйОбъект.МассивСтруктур[0].поле1).Равно(1);
	Ожидаем.Что(ПрочитанныйОбъект.МассивСтруктур[0].поле2).Равно(2);
	Ожидаем.Что(ПрочитанныйОбъект.МассивСтруктур[1].поле1).Равно(1);
	Ожидаем.Что(ПрочитанныйОбъект.МассивСтруктур[1].поле2).Равно(2);

	Ожидаем.Что(ПрочитанныйОбъект.Соответствие).ИмеетТип("Структура");
	Ожидаем.Что(ПрочитанныйОбъект.Соответствие.поле1).Равно(1);
	Ожидаем.Что(ПрочитанныйОбъект.Соответствие.поле2).Равно(2);
	
	Ожидаем.Что(ПрочитанныйОбъект.Ссылка).ИмеетТип("Структура");
	Ожидаем.Что(ПрочитанныйОбъект.Ссылка.number).Равно(2);

КонецПроцедуры

&Тест
Процедура СериализацияКорневогоЧисла() Экспорт

	// Дано
	Значение = 123;
	Сериализатор = Новый СериализаторJson();

	// Когда
	JSON = Сериализатор.Сериализовать(Значение);

	// Тогда
	Ожидаем.Что(JSON).Не_().Равно("");

	Прочитанное = ПрочитатьИзJSON(JSON);

	Ожидаем.Что(Прочитанное).ИмеетТип("Число");
	Ожидаем.Что(Прочитанное).Равно(123);

КонецПроцедуры

&Тест
Процедура СериализацияКорневойСтроки() Экспорт

	// Дано
	Значение = "строка";
	Сериализатор = Новый СериализаторJson();

	// Когда
	JSON = Сериализатор.Сериализовать(Значение);

	// Тогда
	Прочитанное = ПрочитатьИзJSON(JSON);

	Ожидаем.Что(Прочитанное).ИмеетТип("Строка");
	Ожидаем.Что(Прочитанное).Равно("строка");

КонецПроцедуры

&Тест
Процедура СериализацияКорневогоБулево() Экспорт

	// Дано
	Сериализатор = Новый СериализаторJson();

	// Когда
	JSON = Сериализатор.Сериализовать(Истина);

	// Тогда
	Прочитанное = ПрочитатьИзJSON(JSON);
	Ожидаем.Что(Прочитанное).ИмеетТип("Булево");
	Ожидаем.Что(Прочитанное).Равно(Истина);

КонецПроцедуры

&Тест
Процедура СериализацияКорневойДаты() Экспорт

	// Дано
	Сериализатор = Новый СериализаторJson();
	ДатаЗнач = Дата(2023, 1, 2);

	// Когда
	JSON = Сериализатор.Сериализовать(ДатаЗнач);

	// Тогда
	ПрочитаннаяДата = ПрочитатьИзJSON(JSON);
	Ожидаем.Что(ПрочитаннаяДата).ИмеетТип("Дата");
	Ожидаем.Что(ПрочитаннаяДата).Равно(ДатаЗнач);

КонецПроцедуры

&Тест
Процедура СериализацияКорневогоNull() Экспорт

	// Дано
	Сериализатор = Новый СериализаторJson();

	// Когда
	JSON = Сериализатор.Сериализовать(Null);
	Прочитанное = ПрочитатьИзJSON(JSON);

	// Тогда
	// JSON null читается как Неопределено в OneScript
	Ожидаем.Что(Прочитанное).Равно(Неопределено);

КонецПроцедуры

&Тест
Процедура СериализацияКорневогоНеопределено() Экспорт

	// Дано
	Сериализатор = Новый СериализаторJson();

	// Когда
	JSON = Сериализатор.Сериализовать(Неопределено);
	Прочитанное = ПрочитатьИзJSON(JSON);

	// Тогда
	Ожидаем.Что(Прочитанное).Равно(Неопределено);

КонецПроцедуры

&Тест
Процедура СериализацияКорневогоМассива() Экспорт

	// Дано
	МассивДанных = Новый Массив();
	МассивДанных.Добавить(1);
	МассивДанных.Добавить("a");
	МассивДанных.Добавить(Истина);

	ВложеннаяСтруктура = Новый Структура("x", 3);
	МассивДанных.Добавить(ВложеннаяСтруктура);

	Сериализатор = Новый СериализаторJson();

	// Когда
	JSON = Сериализатор.Сериализовать(МассивДанных);

	// Тогда
	Прочитанное = ПрочитатьИзJSON(JSON);

	Ожидаем.Что(Прочитанное).ИмеетТип("Массив");
	Ожидаем.Что(Прочитанное).ИмеетДлину(4);
	Ожидаем.Что(Прочитанное[0]).Равно(1);
	Ожидаем.Что(Прочитанное[1]).Равно("a");
	Ожидаем.Что(Прочитанное[2]).Равно(Истина);
	Ожидаем.Что(Прочитанное[3]).ИмеетТип("Структура");
	Ожидаем.Что(Прочитанное[3].x).Равно(3);

КонецПроцедуры

&Тест
Процедура СериализацияКорневойСтруктуры() Экспорт

	// Дано
	Стр = Новый Структура();
	Стр.Вставить("a", 1);
	Стр.Вставить("b", 2);

	Сериализатор = Новый СериализаторJson();

	// Когда
	JSON = Сериализатор.Сериализовать(Стр);
	Объект = ПрочитатьИзJSON(JSON);

	// Тогда
	Ожидаем.Что(Объект).ИмеетТип("Структура");
	Ожидаем.Что(Объект.a).Равно(1);
	Ожидаем.Что(Объект.b).Равно(2);

КонецПроцедуры

&Тест
Процедура СериализацияКорневогоСоответствия() Экспорт

	// Дано
	Соотв = Новый Соответствие();
	Соотв.Вставить("x", 10);
	Соотв.Вставить("y", 20);

	Сериализатор = Новый СериализаторJson();

	// Когда
	JSON = Сериализатор.Сериализовать(Соотв);
	Объект = ПрочитатьИзJSON(JSON);

	// Тогда
	// JSON-объект читается как Структура
	Ожидаем.Что(Объект).ИмеетТип("Структура");
	Ожидаем.Что(Объект.x).Равно(10);
	Ожидаем.Что(Объект.y).Равно(20);

КонецПроцедуры

&Тест
Процедура СериализацияВсехПолейВключаяБезЭкспорт() Экспорт

	// Дано
	// Тестовый класс с полями как с модификатором Экспорт, так и без него
	ТестовыйКласс = Новый ТестовыйКлассСмешанныеПоля();
	ТестовыйКласс.ПолеСЭкспортом = "ЗначениеЭкспорт";
	ТестовыйКласс.УстановитьПолеБезЭкспорта("ЗначениеБезЭкспорт");
	ТестовыйКласс.ПереименованноеПолеСЭкспортом = "ПереименованноеЭкспорт";
	ТестовыйКласс.УстановитьПереименованноеПолеБезЭкспорта("ПереименованноеБезЭкспорт");

	СериализаторJson = Новый СериализаторJson();
	
	// Когда
	Результат = СериализаторJson.Сериализовать(ТестовыйКласс);

	// Тогда
	Ожидаем.Что(Результат).Не_().Равно("");

	ПрочитанныйОбъект = ПрочитатьИзJSON(Результат);

	Ожидаем.Что(ПрочитанныйОбъект).ИмеетТип("Структура");
	
	// Проверяем, что поля с модификатором Экспорт сериализуются
	Ожидаем.Что(ПрочитанныйОбъект.ПолеСЭкспортом).Равно("ЗначениеЭкспорт");
	Ожидаем.Что(ПрочитанныйОбъект.renamed_field).Равно("ПереименованноеЭкспорт");
	
	// Проверяем, что поля без модификатора Экспорт также сериализуются
	Ожидаем.Что(ПрочитанныйОбъект.ПолеБезЭкспорта).Равно("ЗначениеБезЭкспорт");
	Ожидаем.Что(ПрочитанныйОбъект.renamed_field_no_export).Равно("ПереименованноеБезЭкспорт");

КонецПроцедуры

&Тест
Процедура АвтоматическаяСериализацияСНесериализуемыми() Экспорт

	// Дано
	// Тестовый класс с полями разных типов аннотаций
	ТестовыйКласс = Новый ТестовыйКлассАвтоСериализация();
	ТестовыйКласс.АвтоПоле = "АвтоЗначение";
	ТестовыйКласс.ПереименованноеАвтоПоле = "ПереименованноеЗначение";
	ТестовыйКласс.СкрытоеПоле = "СкрытоеЗначение"; 
	ТестовыйКласс.УстановитьВнутреннееПоле("ВнутреннееЗначение");
	ТестовыйКласс.УстановитьСкрытоеВнутреннееПоле("СкрытоеВнутреннееЗначение");

	СериализаторJson = Новый СериализаторJson();
	
	// Когда
	Результат = СериализаторJson.Сериализовать(ТестовыйКласс);

	// Тогда
	Ожидаем.Что(Результат).Не_().Равно("");

	ПрочитанныйОбъект = ПрочитатьИзJSON(Результат);

	Ожидаем.Что(ПрочитанныйОбъект).ИмеетТип("Структура");
	
	// Проверяем, что поле без аннотаций сериализуется автоматически
	Ожидаем.Что(ПрочитанныйОбъект.АвтоПоле).Равно("АвтоЗначение");
	
	// Проверяем, что поле с JsonСвойство сериализуется с переименованием
	Ожидаем.Что(ПрочитанныйОбъект.renamed_auto_field).Равно("ПереименованноеЗначение");
	
	// Проверяем, что поле без экспорта сериализуется
	Ожидаем.Что(ПрочитанныйОбъект.ВнутреннееПоле).Равно("ВнутреннееЗначение");
	
	// Проверяем, что поля с аннотацией &Несериализуемое НЕ сериализуются
	Ожидаем.Что(ПрочитанныйОбъект.Свойство("СкрытоеПоле")).Равно(Ложь);
	Ожидаем.Что(ПрочитанныйОбъект.Свойство("СкрытоеВнутреннееПоле")).Равно(Ложь);

КонецПроцедуры

Функция ПрочитатьИзJSON(СтрокаJSON)

	Чтение = Новый ЧтениеJSON();
	Чтение.УстановитьСтроку(СтрокаJSON);
	Результат = ПрочитатьJSON(Чтение);
	Чтение.Закрыть();
	
	Возврат Результат;

КонецФункции
