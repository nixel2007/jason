// BSLLS:DuplicateStringLiteral-off
// BSLLS:MagicNumber-off
#Использовать ".."
#Использовать "."
#Использовать asserts

&Тест
Процедура ДесериализоватьПростойОбъект() Экспорт
	
	// Дано
	Строка = "
	|{
	|	""number"": 1,
	|	""Строка"": ""значение"",
	|	""Массив"": [1, 2],
	|	""Структура"": {
	|		""Поле1"": ""значение1"",
	|		""Поле2"": ""значение2""
	|	},
	|	""Ссылка"": {
	|		""number"": 2
	|	}
	|}";
	
	ДесериализаторJson = Новый ДесериализаторJson();

	// Когда
	Объект = ДесериализаторJson.Десериализовать(Строка, Тип("ТестовыйКласс"));

	// Тогда
	Ожидаем.Что(Объект).ИмеетТип("ТестовыйКласс");
	Ожидаем.Что(Объект.Число).Равно(1);
	Ожидаем.Что(Объект.Строка).Равно("значение");

	Ожидаем.Что(Объект.Массив).ИмеетТип("Массив");
	Ожидаем.Что(Объект.Массив).ИмеетДлину(2);
	Ожидаем.Что(Объект.Массив[0]).Равно(1);
	Ожидаем.Что(Объект.Массив[1]).Равно(2);

	Ожидаем.Что(Объект.Структура).ИмеетТип("Структура");
	Ожидаем.Что(Объект.Структура.Поле1).Равно("значение1");
	Ожидаем.Что(Объект.Структура.Поле2).Равно("значение2");

	Ожидаем.Что(Объект.Ссылка).ИмеетТип("ТестовыйКласс");
	Ожидаем.Что(Объект.Ссылка.Число).Равно(2);

КонецПроцедуры

&Тест
Процедура ДесериализацияБезТипа_Число() Экспорт

	// Дано
	JSON = "123";
	Десериализатор = Новый ДесериализаторJson();

	// Когда
	Значение = Десериализатор.Десериализовать(JSON);

	// Тогда
	Ожидаем.Что(Значение).ИмеетТип("Число");
	Ожидаем.Что(Значение).Равно(123);

КонецПроцедуры

&Тест
Процедура ДесериализацияБезТипа_Строка() Экспорт

	// Дано
	JSON = """строка""";
	Десериализатор = Новый ДесериализаторJson();

	// Когда
	Значение = Десериализатор.Десериализовать(JSON);

	// Тогда
	Ожидаем.Что(Значение).ИмеетТип("Строка");
	Ожидаем.Что(Значение).Равно("строка");

КонецПроцедуры

&Тест
Процедура ДесериализацияБезТипа_Массив() Экспорт

	// Дано
	JSON = "[1, ""a"", true, {""x"": 3}]";
	Десериализатор = Новый ДесериализаторJson();

	// Когда
	МассивЗначений = Десериализатор.Десериализовать(JSON);

	// Тогда
	Ожидаем.Что(МассивЗначений).ИмеетТип("Массив");
	Ожидаем.Что(МассивЗначений).ИмеетДлину(4);
	Ожидаем.Что(МассивЗначений[0]).Равно(1);
	Ожидаем.Что(МассивЗначений[1]).Равно("a");
	Ожидаем.Что(МассивЗначений[2]).Равно(Истина);
	Ожидаем.Что(МассивЗначений[3]).ИмеетТип("Соответствие");
	Ожидаем.Что(МассивЗначений[3]["x"]).Равно(3);

КонецПроцедуры

&Тест
Процедура ДесериализацияБезТипа_Объект() Экспорт

	// Дано
	JSON = "{""a"": 1, ""b"": 2}";
	Десериализатор = Новый ДесериализаторJson();

	// Когда
	Объект = Десериализатор.Десериализовать(JSON);

	// Тогда
	Ожидаем.Что(Объект).ИмеетТип("Соответствие");
	Ожидаем.Что(Объект["a"]).Равно(1);
	Ожидаем.Что(Объект["b"]).Равно(2);

КонецПроцедуры

&Тест
Процедура ДесериализацияБезТипа_Null() Экспорт

	// Дано
	JSON = "null";
	Десериализатор = Новый ДесериализаторJson();

	// Когда
	Значение = Десериализатор.Десериализовать(JSON);

	// Тогда
	Ожидаем.Что(Значение).Равно(Неопределено);

КонецПроцедуры

&Тест
Процедура ДесериализацияКорневогоЧисла() Экспорт

	// Дано
	JSON = "123";
	Десериализатор = Новый ДесериализаторJson();

	// Когда
	Значение = Десериализатор.Десериализовать(JSON, Тип("Число"));

	// Тогда
	Ожидаем.Что(Значение).ИмеетТип("Число");
	Ожидаем.Что(Значение).Равно(123);

КонецПроцедуры

&Тест
Процедура ДесериализацияКорневойСтроки() Экспорт

	// Дано
	JSON = """строка""";
	Десериализатор = Новый ДесериализаторJson();

	// Когда
	Значение = Десериализатор.Десериализовать(JSON, Тип("Строка"));

	// Тогда
	Ожидаем.Что(Значение).ИмеетТип("Строка");
	Ожидаем.Что(Значение).Равно("строка");

КонецПроцедуры

&Тест
Процедура ДесериализацияКорневогоБулево() Экспорт

	// Дано
	JSON = "true";
	Десериализатор = Новый ДесериализаторJson();

	// Когда
	Значение = Десериализатор.Десериализовать(JSON, Тип("Булево"));

	// Тогда
	Ожидаем.Что(Значение).ИмеетТип("Булево");
	Ожидаем.Что(Значение).Равно(Истина);

КонецПроцедуры

&Тест
Процедура ДесериализацияКорневойДаты() Экспорт

	// Дано
	ДатаЗнач = Дата(2023, 1, 2);
	Сериализатор = Новый СериализаторJson();
	JSON = Сериализатор.Сериализовать(ДатаЗнач);
	Десериализатор = Новый ДесериализаторJson();

	// Когда
	ПрочитаннаяДата = Десериализатор.Десериализовать(JSON, Тип("Дата"));

	// Тогда
	Ожидаем.Что(ПрочитаннаяДата).ИмеетТип("Дата");
	Ожидаем.Что(ПрочитаннаяДата).Равно(ДатаЗнач);

КонецПроцедуры

&Тест
Процедура ДесериализацияКорневогоNull() Экспорт

	// Дано
	JSON = "null";
	Десериализатор = Новый ДесериализаторJson();

	// Когда
	Значение = Десериализатор.Десериализовать(JSON, Тип("Неопределено"));

	// Тогда
	// JSON null читается как Неопределено в OneScript
	Ожидаем.Что(Значение).Равно(Неопределено);

КонецПроцедуры

&Тест
Процедура ДесериализацияКорневогоМассива() Экспорт

	// Дано
	JSON = "[1, ""a"", true, {""x"": 3}]";
	Десериализатор = Новый ДесериализаторJson();

	// Когда
	МассивЗначений = Десериализатор.Десериализовать(JSON, Тип("Массив"));

	// Тогда
	Ожидаем.Что(МассивЗначений).ИмеетТип("Массив");
	Ожидаем.Что(МассивЗначений).ИмеетДлину(4);
	Ожидаем.Что(МассивЗначений[0]).Равно(1);
	Ожидаем.Что(МассивЗначений[1]).Равно("a");
	Ожидаем.Что(МассивЗначений[2]).Равно(Истина);
	Ожидаем.Что(МассивЗначений[3]).ИмеетТип("Соответствие");
	Ожидаем.Что(МассивЗначений[3]["x"]).Равно(3);

КонецПроцедуры

&Тест
Процедура ДесериализацияКорневойСтруктуры() Экспорт

	// Дано
	JSON = "{""a"": 1, ""b"": 2}";
	Десериализатор = Новый ДесериализаторJson();

	// Когда
	СтруктураЗначений = Десериализатор.Десериализовать(JSON, Тип("Структура"));

	// Тогда
	Ожидаем.Что(СтруктураЗначений).ИмеетТип("Структура");
	Ожидаем.Что(СтруктураЗначений.a).Равно(1);
	Ожидаем.Что(СтруктураЗначений.b).Равно(2);

КонецПроцедуры

&Тест
Процедура ДесериализацияКорневогоСоответствия() Экспорт

	// Дано
	JSON = "{""x"": 10, ""y"": 20}";
	Десериализатор = Новый ДесериализаторJson();

	// Когда
	Соотв = Десериализатор.Десериализовать(JSON, Тип("Соответствие"));

	// Тогда
	Ожидаем.Что(Соотв).ИмеетТип("Соответствие");
	Ожидаем.Что(Соотв["x"]).Равно(10);
	Ожидаем.Что(Соотв["y"]).Равно(20);

КонецПроцедуры
